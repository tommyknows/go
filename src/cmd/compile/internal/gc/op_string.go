// Code generated by "stringer -type Op -trimprefix O syntax.go"; DO NOT EDIT.

package gc

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OXXX-0]
	_ = x[ONAME-1]
	_ = x[ONONAME-2]
	_ = x[OTYPE-3]
	_ = x[OPACK-4]
	_ = x[OLITERAL-5]
	_ = x[OADD-6]
	_ = x[OSUB-7]
	_ = x[OOR-8]
	_ = x[OXOR-9]
	_ = x[OADDSTR-10]
	_ = x[OADDR-11]
	_ = x[OANDAND-12]
	_ = x[OAPPEND-13]
	_ = x[OPREPEND-14]
	_ = x[OFMAP-15]
	_ = x[OFOLDR-16]
	_ = x[OFOLDL-17]
	_ = x[OFILTER-18]
	_ = x[OBYTES2STR-19]
	_ = x[OBYTES2STRTMP-20]
	_ = x[ORUNES2STR-21]
	_ = x[OSTR2BYTES-22]
	_ = x[OSTR2BYTESTMP-23]
	_ = x[OSTR2RUNES-24]
	_ = x[OAS-25]
	_ = x[OAS2-26]
	_ = x[OAS2DOTTYPE-27]
	_ = x[OAS2FUNC-28]
	_ = x[OAS2MAPR-29]
	_ = x[OAS2RECV-30]
	_ = x[OASOP-31]
	_ = x[OCALL-32]
	_ = x[OCALLFUNC-33]
	_ = x[OCALLMETH-34]
	_ = x[OCALLINTER-35]
	_ = x[OCALLPART-36]
	_ = x[OCAP-37]
	_ = x[OCLOSE-38]
	_ = x[OCLOSURE-39]
	_ = x[OCOMPLIT-40]
	_ = x[OMAPLIT-41]
	_ = x[OSTRUCTLIT-42]
	_ = x[OARRAYLIT-43]
	_ = x[OSLICELIT-44]
	_ = x[OPTRLIT-45]
	_ = x[OCONV-46]
	_ = x[OCONVIFACE-47]
	_ = x[OCONVNOP-48]
	_ = x[OCOPY-49]
	_ = x[ODCL-50]
	_ = x[ODCLFUNC-51]
	_ = x[ODCLFIELD-52]
	_ = x[ODCLCONST-53]
	_ = x[ODCLTYPE-54]
	_ = x[ODELETE-55]
	_ = x[ODOT-56]
	_ = x[ODOTPTR-57]
	_ = x[ODOTMETH-58]
	_ = x[ODOTINTER-59]
	_ = x[OXDOT-60]
	_ = x[ODOTTYPE-61]
	_ = x[ODOTTYPE2-62]
	_ = x[OEQ-63]
	_ = x[ONE-64]
	_ = x[OLT-65]
	_ = x[OLE-66]
	_ = x[OGE-67]
	_ = x[OGT-68]
	_ = x[ODEREF-69]
	_ = x[OINDEX-70]
	_ = x[OINDEXMAP-71]
	_ = x[OKEY-72]
	_ = x[OSTRUCTKEY-73]
	_ = x[OLEN-74]
	_ = x[OMAKE-75]
	_ = x[OMAKECHAN-76]
	_ = x[OMAKEMAP-77]
	_ = x[OMAKESLICE-78]
	_ = x[OMUL-79]
	_ = x[ODIV-80]
	_ = x[OMOD-81]
	_ = x[OLSH-82]
	_ = x[ORSH-83]
	_ = x[OAND-84]
	_ = x[OANDNOT-85]
	_ = x[ONEW-86]
	_ = x[ONEWOBJ-87]
	_ = x[ONOT-88]
	_ = x[OBITNOT-89]
	_ = x[OPLUS-90]
	_ = x[ONEG-91]
	_ = x[OOROR-92]
	_ = x[OPANIC-93]
	_ = x[OPRINT-94]
	_ = x[OPRINTN-95]
	_ = x[OPAREN-96]
	_ = x[OSEND-97]
	_ = x[OSLICE-98]
	_ = x[OSLICEARR-99]
	_ = x[OSLICESTR-100]
	_ = x[OSLICE3-101]
	_ = x[OSLICE3ARR-102]
	_ = x[OSLICEHEADER-103]
	_ = x[ORECOVER-104]
	_ = x[ORECV-105]
	_ = x[ORUNESTR-106]
	_ = x[OSELRECV-107]
	_ = x[OSELRECV2-108]
	_ = x[OIOTA-109]
	_ = x[OREAL-110]
	_ = x[OIMAG-111]
	_ = x[OCOMPLEX-112]
	_ = x[OALIGNOF-113]
	_ = x[OOFFSETOF-114]
	_ = x[OSIZEOF-115]
	_ = x[OBLOCK-116]
	_ = x[OBREAK-117]
	_ = x[OCASE-118]
	_ = x[OCONTINUE-119]
	_ = x[ODEFER-120]
	_ = x[OEMPTY-121]
	_ = x[OFALL-122]
	_ = x[OFOR-123]
	_ = x[OFORUNTIL-124]
	_ = x[OGOTO-125]
	_ = x[OIF-126]
	_ = x[OLABEL-127]
	_ = x[OGO-128]
	_ = x[ORANGE-129]
	_ = x[ORETURN-130]
	_ = x[OSELECT-131]
	_ = x[OSWITCH-132]
	_ = x[OTYPESW-133]
	_ = x[OTCHAN-134]
	_ = x[OTMAP-135]
	_ = x[OTSTRUCT-136]
	_ = x[OTINTER-137]
	_ = x[OTFUNC-138]
	_ = x[OTARRAY-139]
	_ = x[ODDD-140]
	_ = x[ODDDARG-141]
	_ = x[OINLCALL-142]
	_ = x[OEFACE-143]
	_ = x[OITAB-144]
	_ = x[OIDATA-145]
	_ = x[OSPTR-146]
	_ = x[OCLOSUREVAR-147]
	_ = x[OCFUNC-148]
	_ = x[OCHECKNIL-149]
	_ = x[OVARDEF-150]
	_ = x[OVARKILL-151]
	_ = x[OVARLIVE-152]
	_ = x[ORESULT-153]
	_ = x[OINLMARK-154]
	_ = x[ORETJMP-155]
	_ = x[OGETG-156]
	_ = x[OEND-157]
}

const _Op_name = "XXXNAMENONAMETYPEPACKLITERALADDSUBORXORADDSTRADDRANDANDAPPENDPREPENDFMAPFOLDRFOLDLFILTERBYTES2STRBYTES2STRTMPRUNES2STRSTR2BYTESSTR2BYTESTMPSTR2RUNESASAS2AS2DOTTYPEAS2FUNCAS2MAPRAS2RECVASOPCALLCALLFUNCCALLMETHCALLINTERCALLPARTCAPCLOSECLOSURECOMPLITMAPLITSTRUCTLITARRAYLITSLICELITPTRLITCONVCONVIFACECONVNOPCOPYDCLDCLFUNCDCLFIELDDCLCONSTDCLTYPEDELETEDOTDOTPTRDOTMETHDOTINTERXDOTDOTTYPEDOTTYPE2EQNELTLEGEGTDEREFINDEXINDEXMAPKEYSTRUCTKEYLENMAKEMAKECHANMAKEMAPMAKESLICEMULDIVMODLSHRSHANDANDNOTNEWNEWOBJNOTBITNOTPLUSNEGORORPANICPRINTPRINTNPARENSENDSLICESLICEARRSLICESTRSLICE3SLICE3ARRSLICEHEADERRECOVERRECVRUNESTRSELRECVSELRECV2IOTAREALIMAGCOMPLEXALIGNOFOFFSETOFSIZEOFBLOCKBREAKCASECONTINUEDEFEREMPTYFALLFORFORUNTILGOTOIFLABELGORANGERETURNSELECTSWITCHTYPESWTCHANTMAPTSTRUCTTINTERTFUNCTARRAYDDDDDDARGINLCALLEFACEITABIDATASPTRCLOSUREVARCFUNCCHECKNILVARDEFVARKILLVARLIVERESULTINLMARKRETJMPGETGEND"

var _Op_index = [...]uint16{0, 3, 7, 13, 17, 21, 28, 31, 34, 36, 39, 45, 49, 55, 61, 68, 72, 77, 82, 88, 97, 109, 118, 127, 139, 148, 150, 153, 163, 170, 177, 184, 188, 192, 200, 208, 217, 225, 228, 233, 240, 247, 253, 262, 270, 278, 284, 288, 297, 304, 308, 311, 318, 326, 334, 341, 347, 350, 356, 363, 371, 375, 382, 390, 392, 394, 396, 398, 400, 402, 407, 412, 420, 423, 432, 435, 439, 447, 454, 463, 466, 469, 472, 475, 478, 481, 487, 490, 496, 499, 505, 509, 512, 516, 521, 526, 532, 537, 541, 546, 554, 562, 568, 577, 588, 595, 599, 606, 613, 621, 625, 629, 633, 640, 647, 655, 661, 666, 671, 675, 683, 688, 693, 697, 700, 708, 712, 714, 719, 721, 726, 732, 738, 744, 750, 755, 759, 766, 772, 777, 783, 786, 792, 799, 804, 808, 813, 817, 827, 832, 840, 846, 853, 860, 866, 873, 879, 883, 886}

func (i Op) String() string {
	if i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
